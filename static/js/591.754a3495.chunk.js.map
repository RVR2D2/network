{"version":3,"file":"static/js/591.754a3495.chunk.js","mappings":"iNAIMA,EAA6B,SAACC,GAClC,MAAO,CACLC,OAAQD,EAAME,KAAKD,SAkBvB,IAdyB,SAACE,GAAe,IACjCC,EADgC,0IAEpC,WACE,OAAKC,KAAKC,MAAML,QACT,SAACE,GAAD,UAAeE,KAAKC,SADI,SAAC,KAAD,CAAUC,GAAI,eAHX,GACNC,EAAAA,WAUhC,OAJqCC,EAAAA,EAAAA,IAAQV,EAARU,CACnCL,K,4GCjBJ,GAAgB,QAAU,uBAAuB,SAAW,yBCA5D,EAAmC,gC,mBCUnC,EARmB,SAAC,GAAgC,IAAD,IAA7BM,KAAAA,OAA6B,MAAtB,QAAsB,MAAbC,GAAAA,OAAa,MAAR,EAAQ,EACjD,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CAASN,GAAE,kBAAaI,GAAxB,SAA+BD,OCLrC,EAA+B,4BCO/B,EANsB,SAAC,GAAiB,IAAfI,EAAc,EAAdA,QACvB,OACE,gBAAKF,UAAWC,EAAhB,SAAiCC,K,+CCG/BC,GAAeC,EAAAA,EAAAA,GAAiB,KAkBtC,EAhBuB,SAACV,GACtB,OACE,gBAAKM,UAAWC,EAAAA,SAAhB,UACE,kBAAMI,SAAUX,EAAMY,aAAtB,WACE,SAACC,EAAA,EAAD,CACET,KAAK,iBACLU,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUR,GACrBS,YAAY,iBAEd,SAACC,EAAA,EAAD,CAAQC,KAAK,eCgBfC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,CAC1BE,GAGF,EAhCgB,SAACxB,GACf,IAAIN,EAAQM,EAAMyB,YAMlB,OACE,iBAAKnB,UAAWC,EAAAA,QAAhB,WACE,iBAAKD,UAAWC,EAAAA,aAAhB,WACE,mCACCb,EAAMgC,SACLhC,EAAMgC,QAAQC,KAAI,SAACC,GAAD,OAChB,SAAC,EAAD,CAA0BxB,KAAMwB,EAAKxB,KAAMC,GAAIuB,EAAKvB,IAAnCuB,EAAKvB,WAG5B,iBAAKC,UAAWC,EAAAA,SAAhB,WACE,oCACCb,EAAMmC,UACLnC,EAAMmC,SAASF,KAAI,SAACC,GAAD,OACjB,SAAC,EAAD,CAA6BpB,QAASoB,EAAKpB,SAAvBoB,EAAKvB,QAE7B,SAACgB,EAAD,CAAqBV,SAnBC,SAACmB,GAC3B9B,EAAM+B,YAAYD,EAASE,0B,UCW/B,GAAeC,EAAAA,EAAAA,KACb9B,EAAAA,EAAAA,KAfsB,SAACT,GACvB,MAAO,CACL+B,YAAa/B,EAAM+B,gBAII,SAACS,GAC1B,MAAO,CACLH,YAAa,SAACC,GACZE,GAASC,EAAAA,EAAAA,GAAmBH,SAOhCI,EAAAA,EAFF,CAGEC","sources":["HOC/withAuthRedirect.js","webpack://social-network/./src/components/Dialogs/style.module.css?f890","webpack://social-network/./src/components/Dialogs/DialogItem/style.module.css?3a8b","components/Dialogs/DialogItem/index.jsx","webpack://social-network/./src/components/Dialogs/DialogMessage/style.module.css?4252","components/Dialogs/DialogMessage/index.jsx","components/Dialogs/MessageForm.jsx","components/Dialogs/index.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\nconst withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\n      return <Component {...this.props} />;\n    }\n  }\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n\n  return ConnectedAuthRedirectComponent;\n};\n\nexport default withAuthRedirect;\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"style_dialogs__wnHX+\",\"textArea\":\"style_textArea__aXod1\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialogsItemsItem\":\"style_dialogsItemsItem__z03Kw\",\"active\":\"style_active__blop8\"};","import s from \"./style.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = ({ name = \"vadim\", id = 1 }) => {\n  return (\n    <div className={s.dialogsItemsItem}>\n      <NavLink to={`dialogs/${id}`}>{name}</NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"messagesItem\":\"style_messagesItem__gPThD\"};","import s from './style.module.css'\n\nconst DialogMessage = ({ message }) => {\n  return (\n    <div className={s.messagesItem}>{message}</div>\n  );\n};\n\nexport default DialogMessage;\n","import s from \"./style.module.css\";\nimport { Field } from \"redux-form\";\nimport Button from \"../Button\";\nimport React from \"react\";\nimport { Textarea } from \"../FormsControl\";\nimport { maxLengthCreator, required } from \"../../utils/validators\";\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst AddMessageForm = (props) => {\n  return (\n    <div className={s.textArea}>\n      <form onSubmit={props.handleSubmit}>\n        <Field\n          name=\"newMessageBody\"\n          component={Textarea}\n          validate={[required, maxLength100]}\n          placeholder=\"New message\"\n        />\n        <Button text=\"Send\" />\n      </form>\n    </div>\n  );\n};\n\nexport default AddMessageForm;\n","import React from \"react\";\nimport s from \"./style.module.css\";\nimport DialogItem from \"./DialogItem\";\nimport DialogMessage from \"./DialogMessage\";\nimport { reduxForm } from \"redux-form\";\nimport AddMessageForm from \"./MessageForm\";\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n\n  const addNewMessageSubmit = (formData) => {\n    props.sendMessage(formData.newMessageBody);\n  };\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>\n        <h3>Dialog</h3>\n        {state.dialogs &&\n          state.dialogs.map((item) => (\n            <DialogItem key={item.id} name={item.name} id={item.id} />\n          ))}\n      </div>\n      <div className={s.messages}>\n        <h3>Message</h3>\n        {state.messages &&\n          state.messages.map((item) => (\n            <DialogMessage key={item.id} message={item.message} />\n          ))}\n        <AddMessageFormRedux onSubmit={addNewMessageSubmit} />\n      </div>\n    </div>\n  );\n};\n\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\n  AddMessageForm\n);\n\nexport default Dialogs;\n","import React from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { sendMessageCreator } from \"../../redux/reducers/dialog-reducer\";\nimport Dialogs from \"./index\";\nimport withAuthRedirect from \"../../HOC/withAuthRedirect\";\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","Component","RedirectComponent","this","props","to","React","connect","name","id","className","s","message","maxLength100","maxLengthCreator","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Button","text","AddMessageFormRedux","reduxForm","form","AddMessageForm","dialogsPage","dialogs","map","item","messages","formData","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}
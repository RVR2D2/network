{"version":3,"file":"static/js/947.97949b95.chunk.js","mappings":"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","sources":["HOC/withAuthRedirect.js","webpack://social-network/./src/components/Profile/style.module.css?5694","webpack://social-network/./src/components/Profile/ProfileInfo/style.module.css?ce29","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Input/index.jsx","components/Profile/ProfileInfo/ProfileContacts.jsx","components/Profile/ProfileInfo/ProfileData.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/index.jsx","webpack://social-network/./src/components/Profile/MyPost/style.module.css?dcea","webpack://social-network/./src/components/Profile/MyPost/Post/style.module.css?5df7","components/Profile/MyPost/Post/index.jsx","components/Profile/MyPost/PostFrom.jsx","components/Profile/MyPost/MyPost.jsx","components/Profile/MyPost/MyPostContainer.jsx","components/Profile/index.jsx","components/Profile/ProfileContainer.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\nconst withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\n      return <Component {...this.props} />;\n    }\n  }\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n\n  return ConnectedAuthRedirectComponent;\n};\n\nexport default withAuthRedirect;\n","// extracted by mini-css-extract-plugin\nexport default {\"appContent\":\"style_appContent__qT-2b\",\"appContentBody\":\"style_appContentBody__BZRGC\"};","// extracted by mini-css-extract-plugin\nexport default {\"appBgImg\":\"style_appBgImg__GT5ky\",\"appAvatarBlock\":\"style_appAvatarBlock__ck7xG\",\"statusMode\":\"style_statusMode__nIfcY\",\"editButton\":\"style_editButton__vx5uz\",\"formSummaryError\":\"style_formSummaryError__vvEmr\"};","import React, { useEffect, useState } from \"react\";\nimport s from \"./style.module.css\";\n\nconst ProfileStatus = (props) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deActivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatusThunk(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <>\n      {!editMode && (\n        <>\n          <span className={s.statusMode} onDoubleClick={activateEditMode}>\n            {props.status || \"Нет статуса\"}\n          </span>\n        </>\n      )}\n\n      {editMode && (\n        <div>\n          <input\n            type=\"text\"\n            autoFocus={true}\n            onBlur={deActivateEditMode}\n            value={status}\n            onChange={onStatusChange}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ProfileStatus;\n","const CustomInput = ({ type, onChange }) => {\n  const defStyle = {\n    border: \"none\",\n    color: \"#fff\",\n  };\n  return (\n    <>\n      <input type={type} onChange={onChange} style={defStyle} />\n    </>\n  );\n};\n\nexport default CustomInput;\n","const ProfileContacts = ({ contactsTitle, contactsValue }) => {\n  return (\n    <p>\n      {contactsTitle}: {contactsValue}\n    </p>\n  );\n};\n\nexport default ProfileContacts;\n","import ProfileContacts from \"./ProfileContacts\";\nimport s from \"./style.module.css\";\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n  return (\n    <>\n      {isOwner && (\n        <button className={s.editButton} onClick={goToEditMode}>\n          Edit profile\n        </button>\n      )}\n      <p>full name: {profile.fullName}</p>\n      <p>aboutMe: {profile.aboutMe}</p>\n\n      <p>Looking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</p>\n      {profile.lookingForAJob && (\n        <p>My skills: {profile.lookingForAJobDescription}</p>\n      )}\n      <div>\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <ProfileContacts\n              key={key}\n              contactsTitle={key}\n              contactsValue={profile.contacts[key]}\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default ProfileData;\n","import s from \"./style.module.css\";\nimport { createField, Input, Textarea } from \"../../FormsControl\";\nimport { reduxForm } from \"redux-form\";\nimport React from \"react\";\n\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <button className={s.editButton}>Save profile</button>\n      {error && <div className={s.formSummaryError}>{error}</div>}\n      <p>\n        full name: {createField(\"Full name\", \"fullName\", null, \"text\", Input)}\n      </p>\n\n      <p>\n        aboutMe:\n        {createField(\"aboutMe\", \"aboutMe\", null, null, Textarea)}\n      </p>\n\n      <p style={{ display: \"block ruby\" }}>\n        Looking for a job:{\" \"}\n        {createField(null, \"lookingForAJob\", null, \"checkbox\", Input)}\n      </p>\n\n      <p>\n        My skills:{\" \"}\n        {createField(\n          \"My skills\",\n          \"lookingForAJobDescription\",\n          null,\n          null,\n          Textarea\n        )}\n      </p>\n      <div>\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <div key={key}>\n              {key}: {createField(key, \"contacts.\" + key, null, \"text\", Input)}\n            </div>\n          );\n        })}\n      </div>\n    </form>\n  );\n};\n\nconst ProfileDataFormReduxForm = reduxForm({\n  form: \"edit-profile\",\n})(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm;\n","import React, { useState } from \"react\";\nimport s from \"./style.module.css\";\nimport Preloader from \"../../Preloader\";\nimport imgMocUser from \"../../../assets/users.png\";\n\nimport ProfileStatus from \"./ProfileStatus\";\nimport CustomInput from \"../../Input\";\nimport ProfileData from \"./ProfileData\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatusThunk,\n  img,\n  isOwner,\n  savePhotoThunk,\n  saveProfile,\n}) => {\n  const [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Preloader />;\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhotoThunk(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = (formData) => {\n    saveProfile(formData).then(() => {\n      setEditMode(false);\n    });\n  };\n\n  return (\n    <div>\n      <div className={s.appBgImg}>{/*<img src={img} alt='bg-img'/>*/}</div>\n      <div className={s.appAvatarBlock} style={{ display: \"flex\" }}>\n        <img\n          style={{ height: \"350px\" }}\n          src={\n            profile.photos.large === null ? imgMocUser : profile.photos.large\n          }\n          alt={profile.fullName}\n        />\n        <div style={{ paddingLeft: \"20px\" }}>\n          {editMode ? (\n            <ProfileDataForm\n              initialValues={profile}\n              profile={profile}\n              onSubmit={onSubmit}\n            />\n          ) : (\n            <ProfileData\n              profile={profile}\n              isOwner={isOwner}\n              goToEditMode={() => setEditMode(true)}\n            />\n          )}\n          <p>\n            status:\n            <ProfileStatus\n              status={status}\n              updateStatusThunk={updateStatusThunk}\n            />\n          </p>\n          {isOwner && (\n            <CustomInput type=\"file\" onChange={onMainPhotoSelected} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"appPost\":\"style_appPost__r2A5v\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"style_post__wgPZ1\",\"contentPost\":\"style_contentPost__bmdea\"};","import s from './style.module.css';\nimport user from '../../../../assets/user.webp';\n\nconst Post = ({ message, like }) => {\n  return (\n    <>\n      <div className={s.post}>\n        <img src={user} alt='' />\n        <div className={s.contentPost}>\n          {message}\n        </div>\n      \n      </div>\n      <button>❤️ | {like}</button>\n    </>\n  );\n};\n\nexport default Post;","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport Button from \"../../Button\";\nimport { maxLengthCreator, required } from \"../../../utils/validators\";\nimport { Textarea } from \"../../FormsControl\";\n\nconst maxLength20 = maxLengthCreator(20);\n\nconst PostFrom = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.handleSubmit}>\n        <Field\n          name=\"newPostText\"\n          component={Textarea}\n          placeholder=\"Send Post...\"\n          validate={[required, maxLength20]}\n        />\n        <Button text=\"Send\" />\n      </form>\n    </div>\n  );\n};\n\nexport default PostFrom;\n","import React from \"react\";\nimport { reduxForm } from \"redux-form\";\n\nimport s from \"./style.module.css\";\nimport Post from \"./Post\";\nimport PostFrom from \"./PostFrom\";\n\nconst MyPost = React.memo((props) => {\n  const onSubmit = (formData) => {\n    props.addPost(formData.newPostText);\n  };\n\n  return (\n    <div className={s.appPost}>\n      <h3>my post</h3>\n      <AddNewPostForm onSubmit={onSubmit} />\n      <div>\n        {props.posts.length === 0 ? (\n          <i\n            style={{ textAlign: \"center\", display: \"block\", marginTop: \"20px\" }}\n          >\n            Пока постов нету\n          </i>\n        ) : (\n          \"\" ||\n          props.posts.map((item) => (\n            <Post key={item.id} message={item.message} like={item.like} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n});\n\nconst AddNewPostForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(PostFrom);\n\nexport default MyPost;\n","import React from \"react\";\nimport { addPostCreator } from \"../../../redux/reducers/profile-reducer\";\nimport MyPost from \"./MyPost\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n  return {\n    newPostText: state.profilePage.newPostText,\n    posts: state.profilePage.posts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostCreator(newPostText));\n    },\n  };\n};\n\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\n\nexport default MyPostContainer;\n","import s from \"./style.module.css\";\nimport bg1 from \"../../assets/bg1.jpeg\";\nimport ProfileInfo from \"./ProfileInfo\";\nimport MyPostContainer from \"./MyPost/MyPostContainer\";\nimport React from \"react\";\n\nconst Profile = (props) => {\n  return (\n    <div className={s.appContent}>\n      <ProfileInfo\n        isOwner={props.isOwner}\n        profile={props.profile}\n        status={props.status}\n        updateStatusThunk={props.updateStatusThunk}\n        savePhotoThunk={props.savePhotoThunk}\n        saveProfile={props.saveProfile}\n        img={bg1}\n      />\n      <div className={s.appContentBody}>\n        <MyPostContainer />\n      </div>\n    </div>\n  );\n};\nexport default Profile;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nimport {\n  getStatusThunk,\n  profileThunk,\n  savePhotoThunk,\n  saveProfileThunk,\n  updateStatusThunk,\n} from \"../../redux/reducers/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport withAuthRedirect from \"../../HOC/withAuthRedirect\";\nimport Profile from \"./index\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.profileThunk(userId);\n    this.props.getStatusThunk(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId !== prevProps) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        isOwner={!this.props.match.params.userId}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatusThunk={this.props.updateStatusThunk}\n        savePhotoThunk={this.props.savePhotoThunk}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n  };\n};\nexport default compose(\n  connect(mapStateToProps, {\n    profileThunk,\n    getStatusThunk,\n    updateStatusThunk,\n    savePhotoThunk,\n    saveProfile: saveProfileThunk,\n  }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer);\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","Component","RedirectComponent","this","props","to","React","connect","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","type","autoFocus","onBlur","updateStatusThunk","value","onChange","e","currentTarget","style","border","color","contactsTitle","contactsValue","profile","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","key","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","Textarea","display","img","savePhotoThunk","saveProfile","Preloader","height","src","photos","large","imgMocUser","alt","paddingLeft","initialValues","formData","then","target","files","length","message","like","user","maxLength20","maxLengthCreator","Field","name","component","placeholder","validate","required","Button","text","MyPost","AddNewPostForm","addPost","newPostText","posts","textAlign","marginTop","item","id","PostFrom","profilePage","dispatch","addPostCreator","bg1","ProfileContainer","userId","match","params","authorizedUserId","history","push","profileThunk","getStatusThunk","refreshProfile","prevProps","prevState","snapshot","compose","saveProfileThunk","withRouter","withAuthRedirect","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}